#  ___________________________________________________
# |  _____                       _____ _ _       _    |
# | |  __ \                     |  __ (_) |     | |   |
# | | |__) |__ _ __   __ _ _   _| |__) || | ___ | |_  |
# | |  ___/ _ \ '_ \ / _` | | | |  ___/ | |/ _ \| __| |
# | | |  |  __/ | | | (_| | |_| | |   | | | (_) | |_  |
# | |_|   \___|_| |_|\__, |\__,_|_|   |_|_|\___/ \__| |
# |                   __/ |                           |
# |  GNU/Linux based |___/  Multi-Rotor UAV Autopilot |
# |___________________________________________________|
#
# SCL Configuration File
#
# Copyright (C) 2014 Tobias Simon, Ilmenau University of Technology
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.


- name: geomag
  sockets:
   - gps: sub
   - decl: pub

- name: gpsp
  sockets:
   - opcd_ctrl: req
   - gps: pub

- name: gps_test
  sockets:
   - gps: sub

- name: gpx_logger
  sockets:
   - gps: sub

- name: console_logger
  sockets:
   - ap_log: sub

- name: remote
  sockets:
   - remote: pub
   - opcd_ctrl: req

- name: ferry_ctrl
  sockets:
   - state: sub
   - ctrl: req

- name: icarus
  sockets:
   - mon: sub
   - state: pub
   - pilot: req
   - ctrl: rep
   - power_ctrl: req
   - power_mon: sub

- name: wifi_sensor
  sockets:
   - wifi: pub

- name: blackbox
  sockets:
   - ap_blackbox: sub

- name: autopilot
  sockets:
   - ap_log: pub        # logs useful human-readable data at different verbosity levels
   - ap_blackbox: pub   # publishes data produced in every step of the main loop
   - gps: sub        # subscribes to GPS data provider
   - decl: sub       # magnetic declination
   - remote: sub         # experimental remote control input
   - ap_ctrl: rep       # control interface
   - ap_mon: pub        # controller error monitoring publisher
   - power: sub      # power data subscriber
   - motors_spinning: pub # "true", "false" depending on motors state
   - opcd_ctrl: req  # OPCD request/reply interface
   - opcd_event: sub # OPCD parameter update

- name: optimizer
  sockets:
   - opcd_ctrl: req
   - blackbox: sub

- name: pilot_shell
  sockets:
   - ctrl: req
   - mon: sub

- name: mavlink
  sockets:
   - pilot_mon: sub
   - power_mon: sub
   - opcd_ctrl: req # opcd
   - gps: sub
   - icarus_ctrl: req
   - state: sub

- name: powerman
  sockets:
   - powerman_ctrl: rep
   - powerman_in: sub
   - powerman_out: pub
   - opcd_ctrl: req

- name: opcd
  sockets:
   - opcd_ctrl: rep
   - opcd_event: pub

- name: opcd_shell
  sockets:
   - opcd_ctrl: req

- name: aircomm
  sockets:
   - aircomm_in: sub
   - aircomm_out: pub
   - opcd_ctrl: req

- name: display
  sockets:
   - motors_spinning: sub
   - gps: sub
   - power: sub

- name: heartbeat
  sockets:
   - gps: sub
   - power: sub

- name: aircomm_app
  sockets:
   - aircomm_out: sub
   - aircomm_in: pub

- name: wifi_loc
  sockets:
   - wifi: sub
   - gps: sub

